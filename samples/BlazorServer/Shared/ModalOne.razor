@inject IModalService ModalService

<div>
    <p>Popup 1</p>
    <EditForm Model="@this">
        <InputNumber @bind-Value="CustomerId" />
        <button @onclick="OpenModal" class="btn btn-outline-danger">Open new popup</button>
    </EditForm>

    <button @onclick="Yes" class="btn btn-outline-success">Yes</button>
    <button @onclick="No" class="btn btn-outline-danger">No</button>
</div>

@code {

    [Parameter] public int? CustomerId { get; set; }
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    async Task OpenModal()
    {
        var confirmationModal = ModalService.Show<ModalTwo>("Modal Two");
        var result = await confirmationModal.Result;

        if (result.Cancelled)
            return;

        var customerId = this.CustomerId;
    }

    async Task Yes()
    {
        BlazoredModal.Close();
    }

    void No() => BlazoredModal.Cancel();

}
